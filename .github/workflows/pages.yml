name: Build & Deploy Pages (with GA4)

on:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 15 * * *"   # daily 15:00 UTC â‰ˆ 08:00 PT (PDT)
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build site
        run: python -m src.build
      
      - name: Inject GA4 snippet into HTML
        env:
          GA_MEASUREMENT_ID: "G-68SNW6M6T4"
        run: |
          set -e

        # 1) Build the snippet as a file (no escaping headaches)
          cat > ga4_snippet.html <<EOF
<!-- GA4 start -->
<script async src="https://www.googletagmanager.com/gtag/js?id=${GA_MEASUREMENT_ID}"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', '${GA_MEASUREMENT_ID}');
</script>
<!-- GA4 end -->
EOF

        # 2) Insert before </head> only if not already present
          while IFS= read -r -d '' file; do
            if ! grep -qi "<!-- GA4 start -->" "$file"; then
              awk '
                BEGIN { IGNORECASE=1 }
                /<\/head>/ {
                  while ((getline line < "ga4_snippet.html") > 0) print line
                  close("ga4_snippet.html")
                  sub(/<\/head>/, "</head>") # keep original close tag position after printing snippet
                }
                { print }
              ' "$file" > "$file.tmp" && mv "$file.tmp" "$file"
            fi
          done < <(find public -type f -name "*.html" -print0)

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to Pages
        id: deployment
        uses: actions/deploy-pages@v4

